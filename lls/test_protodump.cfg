
protodump {

    # relay_maplist : accept-port | relay-to-host | relay-to-port
    # when a connection is accepted from accept-port, a connection is initiated to relay-to-host:relay-to-port
    # all data received from accept-port is forwarded to relay-to-host:relay-to-port
    # and all data received from relay-to-host:relay-to-port is forwarded to accept-port
    # if either side of the connection is dropped by the remote peer, the relay server also drops the linked socket.
    
    relay_maplist = [
      # accept-port | relay-to-host | relay-to-port 
      #-------------------------
      "6565",     "127.0.0.1", "7575", # relay 6565 <-> 127.0.0.1:7575
      #"6000",     "127.0.0.1", "7000"  # relay 6000 <-> 127.0.0.1:7000
    ];

    # full file path to write sent messages to. 
    # filename is appended with `.sent_to_<relay-to-host>_<relay-to-port>_<runid>`
    dump_sent_to_file = "true";
    dump_sent_to_stdout = "false";
    file_path_sent = getenv("HOME") + "/protocol_dump/";

    # full file path to write sent messages to. 
    # filename is appended with `.recv_from_<relay-to-host>_<relay-to-port>_<runid>`
    dump_received_to_file = "true";
    dump_received_to_stdout = "false";
    file_path_received = getenv("HOME") + "/protocol_dump/";

    # full file path to write both sent and recevied messages to, interleaved by arrival timestamp. 
    # filename is appended with `.send_recv_<relay-to-host>_<relay-to-port>_<runid>`
    dump_both_to_file = "true";
    dump_both_to_stdout = "true"; # overrides dump_sent_to_stdout and dump_received_to_stdout
    file_path_both = getenv("HOME") + "/protocol_dump/";
 
    dump_to_stdout = "false";
}

